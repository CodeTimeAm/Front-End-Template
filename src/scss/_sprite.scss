// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$icon-bt-bl-bot-name: 'icon-bt-bl-bot';
$icon-bt-bl-bot-x: 0px;
$icon-bt-bl-bot-y: 0px;
$icon-bt-bl-bot-offset-x: 0px;
$icon-bt-bl-bot-offset-y: 0px;
$icon-bt-bl-bot-width: 45px;
$icon-bt-bl-bot-height: 45px;
$icon-bt-bl-bot-total-width: 45px;
$icon-bt-bl-bot-total-height: 375px;
$icon-bt-bl-bot-image: '../img/sprite/sprite.png';
$icon-bt-bl-bot: (0px, 0px, 0px, 0px, 45px, 45px, 45px, 375px, '../img/sprite/sprite.png', 'icon-bt-bl-bot', );
$icon-bt-bl-left-name: 'icon-bt-bl-left';
$icon-bt-bl-left-x: 0px;
$icon-bt-bl-left-y: 55px;
$icon-bt-bl-left-offset-x: 0px;
$icon-bt-bl-left-offset-y: -55px;
$icon-bt-bl-left-width: 45px;
$icon-bt-bl-left-height: 45px;
$icon-bt-bl-left-total-width: 45px;
$icon-bt-bl-left-total-height: 375px;
$icon-bt-bl-left-image: '../img/sprite/sprite.png';
$icon-bt-bl-left: (0px, 55px, 0px, -55px, 45px, 45px, 45px, 375px, '../img/sprite/sprite.png', 'icon-bt-bl-left', );
$icon-bt-bl-right-name: 'icon-bt-bl-right';
$icon-bt-bl-right-x: 0px;
$icon-bt-bl-right-y: 110px;
$icon-bt-bl-right-offset-x: 0px;
$icon-bt-bl-right-offset-y: -110px;
$icon-bt-bl-right-width: 45px;
$icon-bt-bl-right-height: 45px;
$icon-bt-bl-right-total-width: 45px;
$icon-bt-bl-right-total-height: 375px;
$icon-bt-bl-right-image: '../img/sprite/sprite.png';
$icon-bt-bl-right: (0px, 110px, 0px, -110px, 45px, 45px, 45px, 375px, '../img/sprite/sprite.png', 'icon-bt-bl-right', );
$icon-bt-bl-top-name: 'icon-bt-bl-top';
$icon-bt-bl-top-x: 0px;
$icon-bt-bl-top-y: 165px;
$icon-bt-bl-top-offset-x: 0px;
$icon-bt-bl-top-offset-y: -165px;
$icon-bt-bl-top-width: 45px;
$icon-bt-bl-top-height: 45px;
$icon-bt-bl-top-total-width: 45px;
$icon-bt-bl-top-total-height: 375px;
$icon-bt-bl-top-image: '../img/sprite/sprite.png';
$icon-bt-bl-top: (0px, 165px, 0px, -165px, 45px, 45px, 45px, 375px, '../img/sprite/sprite.png', 'icon-bt-bl-top', );
$icon-bt-left-name: 'icon-bt-left';
$icon-bt-left-x: 0px;
$icon-bt-left-y: 220px;
$icon-bt-left-offset-x: 0px;
$icon-bt-left-offset-y: -220px;
$icon-bt-left-width: 45px;
$icon-bt-left-height: 45px;
$icon-bt-left-total-width: 45px;
$icon-bt-left-total-height: 375px;
$icon-bt-left-image: '../img/sprite/sprite.png';
$icon-bt-left: (0px, 220px, 0px, -220px, 45px, 45px, 45px, 375px, '../img/sprite/sprite.png', 'icon-bt-left', );
$icon-bt-right-name: 'icon-bt-right';
$icon-bt-right-x: 0px;
$icon-bt-right-y: 275px;
$icon-bt-right-offset-x: 0px;
$icon-bt-right-offset-y: -275px;
$icon-bt-right-width: 45px;
$icon-bt-right-height: 45px;
$icon-bt-right-total-width: 45px;
$icon-bt-right-total-height: 375px;
$icon-bt-right-image: '../img/sprite/sprite.png';
$icon-bt-right: (0px, 275px, 0px, -275px, 45px, 45px, 45px, 375px, '../img/sprite/sprite.png', 'icon-bt-right', );
$icon-bt-top-name: 'icon-bt-top';
$icon-bt-top-x: 0px;
$icon-bt-top-y: 330px;
$icon-bt-top-offset-x: 0px;
$icon-bt-top-offset-y: -330px;
$icon-bt-top-width: 45px;
$icon-bt-top-height: 45px;
$icon-bt-top-total-width: 45px;
$icon-bt-top-total-height: 375px;
$icon-bt-top-image: '../img/sprite/sprite.png';
$icon-bt-top: (0px, 330px, 0px, -330px, 45px, 45px, 45px, 375px, '../img/sprite/sprite.png', 'icon-bt-top', );
$spritesheet-width: 45px;
$spritesheet-height: 375px;
$spritesheet-image: '../img/sprite/sprite.png';
$spritesheet-sprites: ($icon-bt-bl-bot, $icon-bt-bl-left, $icon-bt-bl-right, $icon-bt-bl-top, $icon-bt-left, $icon-bt-right, $icon-bt-top, );
$spritesheet: (45px, 375px, '../img/sprite/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
