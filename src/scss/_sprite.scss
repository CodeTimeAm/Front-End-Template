// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$ico-book-name: 'ico-book';
$ico-book-x: 0px;
$ico-book-y: 24px;
$ico-book-offset-x: 0px;
$ico-book-offset-y: -24px;
$ico-book-width: 15px;
$ico-book-height: 15px;
$ico-book-total-width: 23px;
$ico-book-total-height: 136px;
$ico-book-image: '../img/sprite/sprite.png';
$ico-book: (0px, 24px, 0px, -24px, 15px, 15px, 23px, 136px, '../img/sprite/sprite.png', 'ico-book', );
$ico-calendar-name: 'ico-calendar';
$ico-calendar-x: 0px;
$ico-calendar-y: 49px;
$ico-calendar-offset-x: 0px;
$ico-calendar-offset-y: -49px;
$ico-calendar-width: 22px;
$ico-calendar-height: 21px;
$ico-calendar-total-width: 23px;
$ico-calendar-total-height: 136px;
$ico-calendar-image: '../img/sprite/sprite.png';
$ico-calendar: (0px, 49px, 0px, -49px, 22px, 21px, 23px, 136px, '../img/sprite/sprite.png', 'ico-calendar', );
$ico-clock-name: 'ico-clock';
$ico-clock-x: 0px;
$ico-clock-y: 0px;
$ico-clock-offset-x: 0px;
$ico-clock-offset-y: 0px;
$ico-clock-width: 14px;
$ico-clock-height: 14px;
$ico-clock-total-width: 23px;
$ico-clock-total-height: 136px;
$ico-clock-image: '../img/sprite/sprite.png';
$ico-clock: (0px, 0px, 0px, 0px, 14px, 14px, 23px, 136px, '../img/sprite/sprite.png', 'ico-clock', );
$ico-gift-name: 'ico-gift';
$ico-gift-x: 0px;
$ico-gift-y: 80px;
$ico-gift-offset-x: 0px;
$ico-gift-offset-y: -80px;
$ico-gift-width: 23px;
$ico-gift-height: 23px;
$ico-gift-total-width: 23px;
$ico-gift-total-height: 136px;
$ico-gift-image: '../img/sprite/sprite.png';
$ico-gift: (0px, 80px, 0px, -80px, 23px, 23px, 23px, 136px, '../img/sprite/sprite.png', 'ico-gift', );
$ico-project-name: 'ico-project';
$ico-project-x: 0px;
$ico-project-y: 113px;
$ico-project-offset-x: 0px;
$ico-project-offset-y: -113px;
$ico-project-width: 22px;
$ico-project-height: 23px;
$ico-project-total-width: 23px;
$ico-project-total-height: 136px;
$ico-project-image: '../img/sprite/sprite.png';
$ico-project: (0px, 113px, 0px, -113px, 22px, 23px, 23px, 136px, '../img/sprite/sprite.png', 'ico-project', );
$spritesheet-width: 23px;
$spritesheet-height: 136px;
$spritesheet-image: '../img/sprite/sprite.png';
$spritesheet-sprites: ($ico-book, $ico-calendar, $ico-clock, $ico-gift, $ico-project, );
$spritesheet: (23px, 136px, '../img/sprite/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
